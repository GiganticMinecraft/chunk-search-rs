name: Build and publish docker image
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      image_name: chunk-search-rs
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          submodules: recursive
          fetch-depth: '0'

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: build artifacts
        run: |
          cargo install cross
          targets=(
            "aarch64-unknown-linux-gnu"
            "x86_64-pc-windows-gnu"
          )

          for target in "${targets[@]}" ; do
            cross build --target ${target} --release
          done

      - name: copy the binaries to releases folder
        run: |
          rm -rf ./target/debug ./target/release
          mkdir ./target/releases

          # https://stackoverflow.com/questions/216995/how-can-i-use-inverse-or-negative-wildcards-when-pattern-matching-in-a-unix-linu
          shopt -s extglob

          for target_dir in ./target/* ; do
            target_dir_name=$(basename $target_dir)
            if [ ${target_dir_name} != "releases" ]; then
              for artifact in ./target/${target_dir_name}/release/chunk-search-rs* ; do
                artifact_name=$(basename $artifact)
                if [ ${artifact_name} != "chunk-search-rs.d" ]; then
                  cp ./target/${target_dir_name}/release/${artifact_name} ./target/releases/${target_dir_name}-${artifact_name}
                fi
              done
            fi
          done

      - name: Bump version and push tag
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: anothrNick/github-tag-action@1.39.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: "patch"
          WITH_V: true
        id: bump_version

      - name: Release
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: softprops/action-gh-release@v1
        with:
          files: ./target/releases/*
          draft: false
          prerelease: false
          tag_name: ${{ steps.bump_version.outputs.new_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: prepare_image_id
        name: Prepare image id's components
        run: |
          lowercase_id=ghcr.io/${{ github.repository_owner }}/${{ env.image_name }}
          echo "::set-output name=lowercase_id::$(echo $lowercase_id | tr '[A-Z]' '[a-z]')"
          echo "::set-output name=short-ref::$(git rev-parse --short "$GITHUB_SHA")"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./docker/single-target/Dockerfile
          push: true
          tags: |
            ${{ steps.prepare_image_id.outputs.lowercase_id }}:latest
            ${{ steps.prepare_image_id.outputs.lowercase_id }}:${{ steps.prepare_image_id.outputs.short-ref }}

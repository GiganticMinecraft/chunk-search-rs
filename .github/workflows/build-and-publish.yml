name: Build and publish docker image
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          submodules: recursive
        
      - name: install build dependencies
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env

      - name: build artifacts
        run: |
          cargo install cross
          targets=(
            "aarch64-unknown-linux-gnu"
            "x86_64-pc-windows-gnu"
          )

          for target in "${targets[@]}" ; do
            cross build --target ${target} --release
          done

      - name: copy the release folders
        run: |
          rm -rf ./target/debug ./target/release
          mkdir ./target/releases

          # https://stackoverflow.com/questions/216995/how-can-i-use-inverse-or-negative-wildcards-when-pattern-matching-in-a-unix-linu
          shopt -s extglob

          for target_dir in ./target/* ; do
            target_dir_name=$(basename $target_dir)
            if [ ${target_dir_name} != "releases" ]; then 
              for artifact in ./target/${target_dir_name}/release/chunk-search-rs* ; do
                artifact_name=$(basename $artifact)
                if [ ${artifact_name} != "chunk-search-rs.d" ]; then
                  cp ./target/${target_dir_name}/release/${artifact_name} ./target/releases/${target_dir_name}-${artifact_name}
                fi
              done
            fi
          done

          cd target/releases
          zip -r ../releases.zip .
          cd ../../

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/releases.zip
          asset_name: releases.zip
          asset_content_type: application/zip

      - name: Publish Docker Image to GPR
        uses: machine-learning-apps/gpr-docker-publish@master
        id: docker
        with:
          IMAGE_NAME: 'chunk-search-rs'
          DOCKERFILE_PATH: './docker/single-target/Dockerfile'
          BUILD_CONTEXT: './'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
